// proto/vc.proto
syntax = "proto3";

package vc;

service VCService {
  rpc RegisterAuth (RegisterAuthRequest) returns (RegisterAuthResponse);
  rpc CheckAuth (CheckAuthRequest) returns (CheckAuthResponse);
  rpc GetGuardianInfo (GetGuardianInfoRequest) returns (GetGuardianInfoResponse);
  rpc UpdateGuardianInfo (UpdateGuardianRequest) returns (UpdateGuardianResponse);
  rpc UpdateShelterInfo (UpdateShelterRequest) returns (UpdateShelterResponse);
  rpc StoreVC (StoreVCRequest) returns (StoreVCResponse);
  rpc GetVC (GetVCRequest) returns (GetVCResponse);
  rpc GetVCsByWallet (GetVCsByWalletRequest) returns (GetVCsByWalletResponse);
  rpc InvalidateVC (InvalidateVCRequest) returns (InvalidateVCResponse);
  rpc HealthCheck (HealthCheckRequest) returns (HealthCheckResponse);
}

message RegisterAuthRequest {
  string walletAddress = 1;
}

message RegisterAuthData {
  int32 authId = 1;
}

message RegisterAuthResponse {
  bool success = 1;
  RegisterAuthData data = 2;
  string errorCode = 3;
  string errorMessage = 4;
  bool retryable = 5;
  string timestamp = 6;
  string message = 7;
}

message StoreVCRequest {
  string guardianAddress = 1;
  string petDID = 2;
  string vcJwt = 3;
  string metadata = 4;
}

message StoreVCData {
  int32 vcId = 1;
}

message StoreVCResponse {
  bool success = 1;
  StoreVCData data = 2;
  string errorCode = 3;
  string errorMessage = 4;
  bool retryable = 5;
  string timestamp = 6;
  string message = 7;
}

message GetVCRequest {
  string petDID = 1;
  string guardianAddress = 2;
}

message GetVCData {
  string vcJwt = 1;
  string metadata = 2;
  string createdAt = 3;
}

message GetVCResponse {
  bool success = 1;
  GetVCData data = 2;
  string errorCode = 3;
  string errorMessage = 4;
  bool retryable = 5;
  string timestamp = 6;
}

message GetVCsByWalletRequest {
  string walletAddress = 1;
}

message VC {
  string petDID = 1;
  string vcJwt = 2;
  string vcType = 3;
  string createdAt = 4;
}

message GetVCsByWalletData {
  repeated VC vcs = 1;
}

message GetVCsByWalletResponse {
  bool success = 1;
  GetVCsByWalletData data = 2;
  string errorCode = 3;
  string errorMessage = 4;
  bool retryable = 5;
  string timestamp = 6;
}

message UpdateGuardianRequest {
  string walletAddress = 1;
  string email = 2;
  string phone = 3;
  string name = 4;
  bool isEmailVerified = 5;
  bool isOnChainRegistered = 6;
}

message UpdateGuardianData {
  int32 guardianId = 1;
}

message UpdateGuardianResponse {
  bool success = 1;
  UpdateGuardianData data = 2;
  string errorCode = 3;
  string errorMessage = 4;
  bool retryable = 5;
  string timestamp = 6;
  string message = 7;
}

message UpdateShelterRequest {
  string walletAddress = 1;
  string name = 2;
  string location = 3;
  string licenseNumber = 4;
  int32 capacity = 5;
}

message UpdateShelterData {
  int32 shelterId = 1;
}

message UpdateShelterResponse {
  bool success = 1;
  UpdateShelterData data = 2;
  string errorCode = 3;
  string errorMessage = 4;
  bool retryable = 5;
  string timestamp = 6;
  string message = 7;
}

message CheckAuthRequest {
  string walletAddress = 1;
}

message CheckAuthData {
  int32 authId = 1;
}

message CheckAuthResponse {
  bool success = 1;
  CheckAuthData data = 2;
  string errorCode = 3;
  string errorMessage = 4;
  bool retryable = 5;
  string timestamp = 6;
  string message = 7;
}

message GetGuardianInfoRequest {
  string walletAddress = 1;
}

message GuardianInfoData {
  int32 guardianId = 1;
  string email = 2;
  string phone = 3;
  string name = 4;
  bool isEmailVerified = 5;
  bool isOnChainRegistered = 6;
}

message GetGuardianInfoResponse {
  bool success = 1;
  GuardianInfoData data = 2;
  string errorCode = 3;
  string errorMessage = 4;
  bool retryable = 5;
  string timestamp = 6;
}

message InvalidateVCRequest {
  string petDID = 1;
  string guardianAddress = 2;
  string reason = 3;
}

message InvalidateVCResponse {
  bool success = 1;
  string errorCode = 2;
  string errorMessage = 3;
  bool retryable = 4;
  string timestamp = 5;
  string message = 6;
}

message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;
  }
  ServingStatus status = 1;
  string message = 2;
  string timestamp = 3;
  string version = 4;
}